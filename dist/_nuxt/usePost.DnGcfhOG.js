import{z as b,A as O,B as x,r as h,C as E,D as T,E as B,G as w,H as j,I as R,J as S,f as U,K as H}from"./entry.Dx2xGTKy.js";const M=()=>{const r=b();return O()!=="v4"&&console.warn("useStrapi4 is only available for v4"),{find:(d,o,u)=>r(`/${d}`,{method:"GET",params:o,...u}),findOne:(d,o,u,n)=>{typeof o=="object"&&(u=o,o=void 0);const v=[d,o].filter(Boolean).join("/");return r(v,{method:"GET",params:u,...n})},create:(d,o)=>r(`/${d}`,{method:"POST",body:{data:o}}),update:(d,o,u)=>{typeof o=="object"&&(u=o,o=void 0);const n=[d,o].filter(Boolean).join("/");return r(n,{method:"PUT",body:{data:u}})},delete:(d,o)=>{const u=[d,o].filter(Boolean).join("/");return r(u,{method:"DELETE"})}}},m=()=>M(),$=r=>r==="defer"||r===!1;function y(...r){var _;const i=typeof r[r.length-1]=="string"?r.pop():void 0;typeof r[0]!="string"&&r.unshift(i);let[t,s,e={}]=r;if(typeof t!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof s!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const a=R(),g=s,d=()=>null,o=()=>a.isHydrating?a.payload.data[t]:a.static.data[t];e.server=e.server??!0,e.default=e.default??d,e.getCachedData=e.getCachedData??o,e.lazy=e.lazy??!1,e.immediate=e.immediate??!0,e.deep=e.deep??x.deep,e.dedupe=e.dedupe??"cancel";const u=()=>![null,void 0].includes(e.getCachedData(t));if(!a._asyncData[t]||!e.immediate){(_=a.payload._errors)[t]??(_[t]=null);const c=e.deep?h:E;a._asyncData[t]={data:c(e.getCachedData(t)??e.default()),pending:h(!u()),error:T(a.payload._errors,t),status:h("idle")}}const n={...a._asyncData[t]};n.refresh=n.execute=(c={})=>{if(a._asyncDataPromises[t]){if($(c.dedupe??e.dedupe))return a._asyncDataPromises[t];a._asyncDataPromises[t].cancelled=!0}if((c._initial||a.isHydrating&&c._initial!==!1)&&u())return Promise.resolve(e.getCachedData(t));n.pending.value=!0,n.status.value="pending";const p=new Promise((l,f)=>{try{l(g(a))}catch(C){f(C)}}).then(l=>{if(p.cancelled)return a._asyncDataPromises[t];let f=l;e.transform&&(f=e.transform(l)),e.pick&&(f=k(f,e.pick)),a.payload.data[t]=f,n.data.value=f,n.error.value=null,n.status.value="success"}).catch(l=>{if(p.cancelled)return a._asyncDataPromises[t];n.error.value=S(l),n.data.value=U(e.default()),n.status.value="error"}).finally(()=>{p.cancelled||(n.pending.value=!1,delete a._asyncDataPromises[t])});return a._asyncDataPromises[t]=p,a._asyncDataPromises[t]};const v=()=>n.refresh({_initial:!0}),P=e.server!==!1&&a.payload.serverRendered;{const c=H();if(c&&!c._nuxtOnBeforeMountCbs){c._nuxtOnBeforeMountCbs=[];const l=c._nuxtOnBeforeMountCbs;c&&(B(()=>{l.forEach(f=>{f()}),l.splice(0,l.length)}),w(()=>l.splice(0,l.length)))}P&&a.isHydrating&&(n.error.value||u())?(n.pending.value=!1,n.status.value=n.error.value?"error":"success"):c&&(a.payload.serverRendered&&a.isHydrating||e.lazy)&&e.immediate?c._nuxtOnBeforeMountCbs.push(v):e.immediate&&v(),e.watch&&j(e.watch,()=>n.refresh());const p=a.hook("app:data:refresh",async l=>{(!l||l.includes(t))&&await n.refresh()});c&&w(p)}const D=Promise.resolve(a._asyncDataPromises[t]).then(()=>n);return Object.assign(D,n),D}function k(r,i){const t={};for(const s of i)t[s]=r[s];return t}class z{async get(i){var e,a;const{findOne:t}=m(),{data:s}=await y("posts",()=>t("posts",{filters:{slug:{$eq:i}},populate:{profile:{fields:["name","avatarUrl","slug"],populate:{posts:{fields:["title","imgURL","slug"]}}}}}));return{data:(e=s.value)==null?void 0:e.data,meta:(a=s.value)==null?void 0:a.meta}}async previews(){var s,e;const{find:i}=m(),{data:t}=await y("previews",()=>i("posts",{fields:["slug","imgURL","title","description"]}));return{data:(s=t.value)==null?void 0:s.data,meta:(e=t.value)==null?void 0:e.meta}}async postsInTag(i){var e,a;const{find:t}=m(),{data:s}=await y("postsInTag",()=>t("categories",{filters:{name:{$eq:i}},populate:["posts"]}));return{data:(e=s.value)==null?void 0:e.data[0],meta:(a=s.value)==null?void 0:a.meta}}async getTags(){var s,e;const{find:i}=m(),{data:t}=await y("categories",()=>i("categories"));return{data:(s=t.value)==null?void 0:s.data,meta:(e=t.value)==null?void 0:e.meta}}async getCollection(){var s,e;const{find:i}=m(),{data:t}=await y("collections",()=>i("collections",{populate:{posts:{fields:["id"]}}}));return{data:(s=t.value)==null?void 0:s.data,meta:(e=t.value)==null?void 0:e.meta}}async getCollectionPosts(i){var e,a;const{find:t}=m(),{data:s}=await y("collections",()=>t("collections",{filters:{slug:{$eq:i}},populate:{posts:{fields:["slug","imgURL","title","description"]}}}));return{data:(e=s.value)==null?void 0:e.data,meta:(a=s.value)==null?void 0:a.meta}}}const I=new z;export{y as a,I as b,m as u};
